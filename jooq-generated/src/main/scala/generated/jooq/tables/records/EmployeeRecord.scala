/*
 * This file is generated by jOOQ.
 */
package generated.jooq.tables.records


import generated.jooq.tables.Employee

import java.lang.Integer
import java.lang.String

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

import scala.Option


/**
 * This class is generated by jOOQ.
 */
class EmployeeRecord extends UpdatableRecordImpl[EmployeeRecord](Employee.EMPLOYEE) {

  /**
   * Setter for <code>test.employee.id</code>.
   */
  def setId(value: Integer): Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>test.employee.id</code>.
   */
  def getId: Integer = get(0).asInstanceOf[Integer]

  /**
   * Setter for <code>test.employee.name</code>.
   */
  def setName(value: String): Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>test.employee.name</code>.
   */
  def getName: String = get(1).asInstanceOf[String]

  /**
   * Setter for <code>test.employee.salary</code>.
   */
  def setSalary(value: Integer): Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>test.employee.salary</code>.
   */
  def getSalary: Integer = get(2).asInstanceOf[Integer]

  /**
   * Setter for <code>test.employee.age</code>.
   */
  def setAge(value: Option[Int]): Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>test.employee.age</code>.
   */
  def getAge: Option[Int] = get(3).asInstanceOf[Option[Int]]

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  override def key: Record1[Integer] = super.key.asInstanceOf[ Record1[Integer] ]

  /**
   * Create a detached, initialised EmployeeRecord
   */
  def this(id : Integer, name : String, salary : Integer, age : Option[Int]) = {
    this()

    this.setId(id)
    this.setName(name)
    this.setSalary(salary)
    this.setAge(age)
    resetChangedOnNotNull()
  }
}
